<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.decisioncustom.mapper.TEmployeeMapper">


  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long">
    delete from t_employee
    where id = #{id,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.decisioncustom.domain.TEmployee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_employee (user_name, head_img, quick_mark, 
      phone_num, real_name, pass_word, 
      input_time, reading_quantity, thumb_up_quantity, 
      practice_num, risk_disclosure, disclaimer, 
      state, employee_details)
    values (#{userName,jdbcType=VARCHAR}, #{headImg,jdbcType=VARCHAR}, #{quickMark,jdbcType=VARCHAR}, 
      #{phoneNum,jdbcType=VARCHAR}, #{realName,jdbcType=VARCHAR}, #{passWord,jdbcType=VARCHAR}, 
      #{inputTime,jdbcType=TIMESTAMP}, #{readingQuantity,jdbcType=BIGINT}, #{thumbUpQuantity,jdbcType=BIGINT}, 
      #{practiceNum,jdbcType=VARCHAR}, #{riskDisclosure,jdbcType=VARCHAR}, #{disclaimer,jdbcType=VARCHAR}, 
      #{state,jdbcType=INTEGER}, #{employeeDetails,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.decisioncustom.domain.TEmployee">
    <selectKey keyProperty="id" order="AFTER" resultType="java.lang.Long">
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into t_employee
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        user_name,
      </if>
      <if test="headImg != null">
        head_img,
      </if>
      <if test="quickMark != null">
        quick_mark,
      </if>
      <if test="phoneNum != null">
        phone_num,
      </if>
      <if test="realName != null">
        real_name,
      </if>
      <if test="passWord != null">
        pass_word,
      </if>
      <if test="inputTime != null">
        input_time,
      </if>
      <if test="readingQuantity != null">
        reading_quantity,
      </if>
      <if test="thumbUpQuantity != null">
        thumb_up_quantity,
      </if>
      <if test="practiceNum != null">
        practice_num,
      </if>
      <if test="riskDisclosure != null">
        risk_disclosure,
      </if>
      <if test="disclaimer != null">
        disclaimer,
      </if>
      <if test="state != null">
        state,
      </if>
      <if test="employeeDetails != null">
        employee_details,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="userName != null">
        #{userName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="quickMark != null">
        #{quickMark,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        #{realName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingQuantity != null">
        #{readingQuantity,jdbcType=BIGINT},
      </if>
      <if test="thumbUpQuantity != null">
        #{thumbUpQuantity,jdbcType=BIGINT},
      </if>
      <if test="practiceNum != null">
        #{practiceNum,jdbcType=VARCHAR},
      </if>
      <if test="riskDisclosure != null">
        #{riskDisclosure,jdbcType=VARCHAR},
      </if>
      <if test="disclaimer != null">
        #{disclaimer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        #{state,jdbcType=INTEGER},
      </if>
      <if test="employeeDetails != null">
        #{employeeDetails,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.decisioncustom.domain.TEmployee">
    update t_employee
    <set>
      <if test="userName != null">
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
      <if test="headImg != null">
        head_img = #{headImg,jdbcType=VARCHAR},
      </if>
      <if test="quickMark != null">
        quick_mark = #{quickMark,jdbcType=VARCHAR},
      </if>
      <if test="phoneNum != null">
        phone_num = #{phoneNum,jdbcType=VARCHAR},
      </if>
      <if test="realName != null">
        real_name = #{realName,jdbcType=VARCHAR},
      </if>
      <if test="passWord != null">
        pass_word = #{passWord,jdbcType=VARCHAR},
      </if>
      <if test="inputTime != null">
        input_time = #{inputTime,jdbcType=TIMESTAMP},
      </if>
      <if test="readingQuantity != null">
        reading_quantity = #{readingQuantity,jdbcType=BIGINT},
      </if>
      <if test="thumbUpQuantity != null">
        thumb_up_quantity = #{thumbUpQuantity,jdbcType=BIGINT},
      </if>
      <if test="practiceNum != null">
        practice_num = #{practiceNum,jdbcType=VARCHAR},
      </if>
      <if test="riskDisclosure != null">
        risk_disclosure = #{riskDisclosure,jdbcType=VARCHAR},
      </if>
      <if test="disclaimer != null">
        disclaimer = #{disclaimer,jdbcType=VARCHAR},
      </if>
      <if test="state != null">
        state = #{state,jdbcType=INTEGER},
      </if>
      <if test="employeeDetails != null">
        employee_details = #{employeeDetails,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.decisioncustom.domain.TEmployee">
    update t_employee
    set user_name = #{userName,jdbcType=VARCHAR},
      head_img = #{headImg,jdbcType=VARCHAR},
      quick_mark = #{quickMark,jdbcType=VARCHAR},
      phone_num = #{phoneNum,jdbcType=VARCHAR},
      real_name = #{realName,jdbcType=VARCHAR},
      pass_word = #{passWord,jdbcType=VARCHAR},
      input_time = #{inputTime,jdbcType=TIMESTAMP},
      reading_quantity = #{readingQuantity,jdbcType=BIGINT},
      thumb_up_quantity = #{thumbUpQuantity,jdbcType=BIGINT},
      practice_num = #{practiceNum,jdbcType=VARCHAR},
      risk_disclosure = #{riskDisclosure,jdbcType=VARCHAR},
      disclaimer = #{disclaimer,jdbcType=VARCHAR},
      state = #{state,jdbcType=INTEGER},
      employee_details = #{employeeDetails,jdbcType=LONGVARCHAR}
    where id = #{id,jdbcType=BIGINT}
  </update>
  <resultMap id="BaseResultMap" type="com.decisioncustom.domain.TEmployee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="quick_mark" jdbcType="VARCHAR" property="quickMark" />
    <result column="phone_num" jdbcType="VARCHAR" property="phoneNum" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="reading_quantity" jdbcType="BIGINT" property="readingQuantity" />
    <result column="thumb_up_quantity" jdbcType="BIGINT" property="thumbUpQuantity" />
    <result column="practice_num" jdbcType="VARCHAR" property="practiceNum" />
    <result column="risk_disclosure" jdbcType="VARCHAR" property="riskDisclosure" />
    <result column="disclaimer" jdbcType="VARCHAR" property="disclaimer" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="employee_details" jdbcType="LONGVARCHAR" property="employeeDetails" />
    <association javaType="Department" property="department">
      <id column="did" property="id" />
      <result column="dname" property="name" />
    </association>
    <!-- 根据emp id 查询到所有角色 -->
    <collection column="id" javaType="arrayList" ofType="Role" property="roles" select="com.decisioncustom.mapper.RoleMapper.employeeId_role">
    </collection>
    <!-- 根据emp id 查询到所有角色 -->
    <collection column="id" javaType="arrayList" ofType="TColumn" property="columns" select="com.decisioncustom.mapper.TEmployeeMapper.employeeId_column">
    </collection>
  </resultMap>
  <sql id="Base_Column_List">
    t_employee.id, user_name, head_img, phone_num,real_name, pass_word, input_time, reading_quantity, thumb_up_quantity,
    practice_num, t_employee.state,employee_details,disclaimer
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Long" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from t_employee
    where id = #{id,jdbcType=BIGINT}
  </select>


  <resultMap id="EmployeeRoleMap" type="com.decisioncustom.domain.TEmployee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <!-- 根据emp id 查询到所有角色 -->
    <collection column="id" javaType="arrayList" ofType="Role" property="roles" select="com.decisioncustom.mapper.RoleMapper.employeeId_role">
    </collection>
    <!-- 根据emp id 查询到所有角色 -->
    <collection column="id" javaType="arrayList" ofType="TColumn" property="columns" select="com.decisioncustom.mapper.TEmployeeMapper.employeeId_column">
    </collection>
  </resultMap>
  <resultMap id="EmployeeMap" type="com.decisioncustom.domain.TEmployee">
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="user_name" jdbcType="VARCHAR" property="userName" />
    <result column="head_img" jdbcType="VARCHAR" property="headImg" />
    <result column="real_name" jdbcType="VARCHAR" property="realName" />
    <result column="pass_word" jdbcType="VARCHAR" property="passWord" />
    <result column="input_time" jdbcType="TIMESTAMP" property="inputTime" />
    <result column="reading_quantity" jdbcType="BIGINT" property="readingQuantity" />
    <result column="thumb_up_quantity" jdbcType="BIGINT" property="thumbUpQuantity" />
    <result column="disclaimer" jdbcType="VARCHAR" property="disclaimer" />
    <result column="practice_num" jdbcType="VARCHAR" property="practiceNum" />
    <result column="state" jdbcType="INTEGER" property="state" />
    <result column="employee_details" jdbcType="LONGVARCHAR" property="employeeDetails" />
  </resultMap>
  <!-- where条件的sql语句 -->
  <sql id="EmployeeWhere">
    <where>
      <if test="q != null and q !=''">
        and (e.user_name like concat('%',#{q},'%') or e.real_name
        like concat('%',#{q},'%'))
      </if>

      <if test="state!=-2 and state!=null">
        and e.state = #{state}
      </if>

      <if test="beginTime!=null and beginTime!=''">
        and e.inputTime&gt;=#{beginTime}
      </if>

      <if test="endTime!=null and endTime!=''">
        and not e.inputTime &gt; #{endTime}
      </if>

    </where>
  </sql>

  <select id="selectAll" resultMap="EmployeeMap">
    select
    <include refid="Base_Column_List" />
    from t_employee
  </select>

  <!--removeEmployee_Roles 通过empid 删除中间表数据 -->
  <delete id="removeEmployeeRoles" parameterType="java.lang.Long">
    DELETE
    FROM
    t_employee_role
    WHERE
    employee_id = #{id}
  </delete>
  <!--saveEmployee_Roles 保存emp_role中间表数据 -->
  <insert id="saveEmployeeRoles" parameterType="java.util.List">
    insert into t_employee_role(employee_id,role_id)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.employeeId},#{item.roleId})
    </foreach>
  </insert>

  <!--removeEmployeeColumns 通过empid 删除中间表数据 -->
  <delete id="removeEmployeeColumns" parameterType="java.lang.Long">
    DELETE
    FROM
    t_employee_column
    WHERE
    employee_id = #{id}
  </delete>
  <!--saveEmployeeColumns 保存emp_role中间表数据 -->
  <insert id="saveEmployeeColumns" parameterType="java.util.List">
    insert into t_employee_column(employee_id,column_id)
    values
    <foreach collection="list" index="index" item="item" separator=",">
      (#{item.employeeId},#{item.columnId})
    </foreach>
  </insert>

  <!-- 根据emp id查询所有栏目 -->
  <select id="employeeId_column" parameterType="long" resultType="TColumn">
    SELECT DISTINCT
    o.*
    from
    t_employee_column t
    join t_column o on t.column_id = o.id
    where
    t.employee_id=#{id}
  </select>


  <!-- 根据用户名查询整个用户 -->
  <select id="getEmployeeByUsername" parameterType="java.lang.String" resultMap="EmployeeMap">
    select  * from t_employee where user_name=#{userName}
  </select>
  <!-- 根据用户Id查询用户角色 -->
  <select id="getRoleById" parameterType="java.lang.Long" resultMap="EmployeeRoleMap">
    select  * from t_employee where id=#{id}
  </select>
  <!-- 根据部门查询员工 -->
  <select id="getEmployeeByDept" parameterType="java.lang.Long" resultMap="EmployeeMap">
    select *
    from t_employee where department_id = #{id}
  </select>
  <!-- 根据operating_record_id 查询客服 -->
  <select id="employeeIdRecord" parameterType="java.lang.Long" resultMap="EmployeeMap">
    SELECT DISTINCT
    e.*
    FROM
    t_operating_record_employee t
    LEFT JOIN t_employee e ON t.employee_id = e.id
    WHERE
    t.operating_record_id = #{id};
  </select>
  <!-- 根据operating_record_id 查询客服 -->
  <select id="employeeIdComplain" parameterType="java.lang.Long" resultMap="EmployeeMap">
    SELECT DISTINCT
    e.*
    FROM
    t_customer_complain_employee t
    LEFT JOIN t_employee e ON t.employee_id = e.id
    WHERE
    t.customer_complain_id = #{id};
  </select>
  <!-- 根据operating_record_id 查询客服 -->
  <select id="employeeIdCustomer" parameterType="java.lang.Long" resultMap="EmployeeMap">
    SELECT DISTINCT
    e.*
    FROM
    t_customer_employee t
    LEFT JOIN t_employee e ON t.employee_id = e.id
    WHERE
    t.customer_id = #{id};
  </select>
</mapper>